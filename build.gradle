buildscript {
    repositories {
        jcenter()
        maven {
            name = "Forge Gradle"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "Gradle Plugins"
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'
//Only edit below this line, the above code adds and enables the nessasary things for Forge to be setup.


version = "${minecraft_version}-${build_feature_version}.${build_fix_version}"
group= "com.midnightsfx.exacompat" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "exacompat"

sourceCompatibility = targetCompatibility = "1.8" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

//sourceCompatibility = JavaVersion.VERSION_1_7
//targetCompatibility = JavaVersion.VERSION_1_8

minecraft {

    version = "${minecraft_version}-12.18.3.2316"
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "stable_29"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

repositories {
    mavenLocal()
    mavenCentral()

    maven {
        name 'DVS1 Maven FS'
        url 'http://dvs1.progwml6.com/files/maven'
    }

    maven {
        name 'forge'
        url 'http://files.minecraftforge.net/maven'
    }

    maven { // CurseForge
        url "https://minecraft.curseforge.com/api/maven/"
    }
}

dependencies {

    // Thermal Foundation and COFH - Curseforge
    deobfCompile "thermal-foundation:ThermalFoundation-${minecraft_version}:${tf_version}:universal"
    deobfCompile "cofhcore:CoFHCore-${minecraft_version}:${cofhcore_version}:universal"

    // Tinkers Construct and Mantle
    deobfCompile "slimeknights.mantle:Mantle:${minecraft_version}-1.1.4.+:deobf"
    deobfCompile "slimeknights:TConstruct:${minecraft_version}-2.6.+:deobf"

    // JEI - because recipes
    deobfCompile "mezz.jei:jei_${minecraft_version}:3.+"
    //deobfProvided "mezz.jei:jei_${minecraft_version}:3.+"

    // Railcraft
    // deobfCompile "railcraft:Railcraft-${minecraft_version}:MC-1.10.2"

    // Immersive Engineering - Curseforge
    deobfCompile "immersive-engineering:ImmersiveEngineering:0.10:${immersive_engineering_build}"
    // Immersive Petroleum - Curseforge
    deobfCompile "immersive-petroleum:immersivepetroleum:1.10.2:${immersive_petroleum_build}"

    // Botania - Curseforge
    //deobfCompile "botania:Botania r1.9:${botania_build}"
    //deobfCompile "baubles:Baubles:${minecraft_version}:${baubles_build}"

    // PSI - Curseforge
    deobfCompile "psi:Psi:r1.0:${psi_build}"
    deobfCompile "autoreglib:AutoRegLib:1.0:2"

    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

// Not sourcing anything locally
//dependencies {
//    compile files(
//            'ImmersiveEngineering-0.10-60.jar'
//    )
//}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        include '**/*.properties'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
        exclude '**/*.properties'
    }
}

idea { module { inheritOutputDirs = true } }
